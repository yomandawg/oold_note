{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset129 \'b1\'bc\'b8\'b2;}}
{\colortbl ;\red0\green0\blue255;\red0\green77\blue187;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\f0\fs22 Remote Address: \'c1\'d6\'bc\'d2  ===>  \'b5\'b5\'b8\'de\'c0\'ce \'b3\'d7\'c0\'d3 \'bd\'c3\'bd\'ba\'c5\'db\par
125.209.222.141===> naver.com\par
\par
\'bf\'e4\'c3\'bb-> \'b9\'ae\'bc\'ad\'b8\'a6 \'b9\'de\'b4\'c2 \'b0\'cd(html)\par
\par
\'b8\'da\'c0\'ef\'c0\'cc\'bb\'e7\'c0\'da\'b5\'e9\'c3\'b3\'b7\'b3\par
\par
\par
AWS\par
\par
AWS reinvent (\'c4\'c1\'c6\'e4\'b7\'b1\'bd\'ba)\par
\par
developer + operator = devOps <= \'c5\'ac\'b6\'f3\'bf\'ec\'b5\'e5\'bc\'ad\'ba\'f1\'bd\'ba\par
\par
elastic road balancer\par
\par
operation\'b5\'b5 \'c1\'df\'bf\'e4\par
\par
\par
linux\par
\tab sudo (superuser do)\par
\tab cd (change direction)\par
\tab cd / (\'c3\'d6\'bb\'f3\'c0\'a7 root\'b7\'ce \'b0\'a8)\par
\tab\'c4\'c4\'c7\'bb\'c5\'cd\'b0\'f8\'c7\'d0\'bf\'a1\'bc\'ad /(\'b7\'e7\'c6\'ae)\'b4\'c2 \'c1\'a6\'c0\'cf \'c0\'a7\'b7\'ce \'b0\'a1\'b4\'c2 \'b0\'cd\par
\tab cd ~ (home directory ~)\par
\tab ls \'c7\'f6\'c0\'e7 \'c6\'fa\'b4\'f5\'be\'c8 \'b8\'ae\'bd\'ba\'c6\'ae\par
\tab clear\par
\par
flask\par
\par
\'bf\'c0\'c7\'c1\'b6\'f3\'c0\'ce\'bc\'ad\'ba\'f1\'bd\'ba = \'bf\'e4\'c3\'bb\'b0\'fa \'c0\'c0\'b4\'e4\par
\'c0\'a5\'bc\'ad\'ba\'f1\'bd\'ba = url\'b0\'fa \par
\par
url structure optimazation\par
{{\field{\*\fldinst{HYPERLINK http://www.seosuccesstips.com/category/article-name/ }}{\fldrslt{http://www.seosuccesstips.com/category/article-name/\ul0\cf0}}}}\f0\fs22\par
(protocol)(sub-domatin)(domain)(slug(articlepermalink)\par
\'bf\'e4\'c3\'bb \'b9\'de\'b4\'c2 \'bb\'e7\'b6\'f7\'c0\'c7 \'c1\'d6\'bc\'d2:naver.com =\'b4\'a9\'b1\'b8\'bf\'a1\'b0\'d4 \'ba\'b8\'b3\'be\'c1\'f6\par
/xxx =\'b9\'bb \'bf\'e4\'c3\'bb\'c7\'d2\'c1\'f6\'b0\'a1 \'b5\'da\'bf\'a1 \'bf\'c0\'b4\'c2\'b0\'cd\par
/ = \'b0\'a1\'c0\'e5 \'b1\'e2\'ba\'bb\'c0\'cc \'b5\'c7\'b4\'c2(root) \'c6\'e4\'c0\'cc\'c1\'f6\'b8\'a6 \'c1\'e0\par
\par
\par
Ex) {{\field{\*\fldinst{HYPERLINK https://search.naver.com/search.nave?query=multicampus }}{\fldrslt{https://search.naver.com/search.nave?query=multicampus\ul0\cf0}}}}\f0\fs22\par
\'bf\'a9\'b1\'e2\'bc\'ad search.\'c0\'ba www.\'b0\'fa \'b4\'d9\'b8\'a5 \'bc\'ad\'b9\'f6\'c0\'cf \'bc\'f6\'b5\'b5 \'c0\'d6\'b4\'d9\par
/search.naver : \'b3\'d7\'c0\'cc\'b9\'f6\'be\'df \'b0\'cb\'bb\'f6\'c7\'d8\'c1\'e0\par
?\'b5\'da\'bf\'a1\'c0\'d6\'b4\'c2 xxx\'b5\'e9\'c0\'ba \'c0\'cc\'b7\'b1 \'c1\'a4\'ba\'b8\'b8\'a6 \'b4\'e3\'be\'c6 \'ba\'b8\'b3\'be\'b0\'d4(parameter)\par
?chat_id=1238123879&text=hello\par
?query=xxx \'c0\'cc\'b7\'b1 \'b4\'dc\'be\'ee\'b8\'a6 \'b4\'e3\'be\'c6 \'ba\'b8\'b3\'be\'b0\'d4 == XXX\'b8\'a6 \'b0\'cb\'bb\'f6\'c7\'d8\'c1\'e0\par
\par
\par
routing\'c0\'cc\'b6\'f5 \'b9\'ab\'be\'f9?\par
flask routing?\par
\par
aws blockchain \'c0\'da\'b0\'dd\'c1\'f5 \'c0\'af\'bf\'eb\par
aws ec2 pricing \'be\'c6\'b8\'b6\'c1\'b8\'c4\'c4\'c7\'bb\'c5\'cd\par
{{\field{\*\fldinst{HYPERLINK https://www.ec2instances.info }}{\fldrslt{https://www.ec2instances.info\ul0\cf0}}}}\f0\fs22\tab T2 Micro \'b0\'f8\'c2\'a5 - \'bc\'ad\'b9\'f6\'b5\'b9\'b8\'ae\'b1\'e2\'bf\'a3 \'a4\'a1\'a4\'ba\par
\tab\tab\tab\tab T2 Medium \'c7\'a5\'c1\'d8\'c0\'fb\'c0\'ce \'bc\'ad\'b9\'f6\'b5\'b9\'b8\'ae\'b1\'e2\'bf\'a1 \'a4\'a1\'a4\'ba\par
\par
mooc\par
coursera\par
edX\par
cs50\par
udacity*** - \'b8\'d3\'bd\'c5\'b7\'af\'b4\'d7, \'c5\'eb\'b0\'e8\'c7\'d0 \'b5\'ee\'b5\'ee \'b1\'c2\'b1\'c2\par
\par
view-source:https://www.naver.com/\par
html \'b9\'ae\'bc\'ad \'b1\'b8\'bc\'ba\par
html\'b9\'ae\'bc\'ad\'ba\'bc\'bc\'f6\'c0\'d6\'c0\'bd\par
\par
\par
\'b0\'cb\'bb\'f6\'bf\'a3\'c1\'f8\par
-> \'c6\'e4\'c4\'cf\'bf\'a1\'bc\'ad \'c5\'a9\'b7\'d1\'b8\'b5\'c7\'d8\'bc\'ad\par
\'c5\'a9\'b7\'d1\'b7\'af\'b0\'a1 \'c1\'df\'bf\'e4\'b5\'b5 \'c6\'c7\'b4\'dc\'c7\'d8\'bc\'ad\par
\'b1\'b8\'c1\'b6\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'df \'c2\'a5\'b3\'f6\'be\'df\'c7\'d4\par
\'b1\'b8\'b1\'db\'c5\'a9\'b7\'d1\'b7\'af\'b0\'a1 \'c6\'d0\'c5\'b6\'c0\'bb \'b1\'dc\'be\'fa\'c0\'bb\'b6\'a7 \'bb\'cc\'c7\'f4\'b3\'aa\'bf\'c2\'b0\'cd\'b5\'e9\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d1\'b0\'cd\'b5\'e9\'c0\'cc \'b0\'cb\'bb\'f6\'c7\'d8\'bc\'ad \'c7\'d9\'bd\'c9\'b3\'bb\'bf\'eb\'b5\'e9\'c0\'cc \'b6\'e4\par
=> seo\'b0\'a1 \'c0\'df\'b5\'c5\'c0\'d6\'b4\'c2 \'c0\'a5\par
\'bf\'b9: multicampus vs fastcampus \'b0\'cb\'bb\'f6\'bf\'a1\'bc\'ad \'ba\'f1\'b1\'b3\par
\'b0\'cb\'bb\'f6\'bf\'a1\'bc\'ad \'c3\'d6\'c0\'fb\'c8\'ad\'b5\'c7\'b4\'c2 \'c1\'a4\'ba\'b8\'b0\'a1 \'b3\'aa\'bf\'cd\'be\'df \'b0\'cb\'bb\'f6\'c0\'da\'b5\'e9\'c0\'cc \'bd\'b1\'b0\'d4 \'ba\'bc\'bc\'f6\'c0\'d6\'b0\'ed \'c1\'a2\'b1\'d9\'bc\'ba good\par
\'c0\'cc\'b0\'c5\'bf\'a1 \'c0\'d4\'b0\'a2\'c7\'d8\'bc\'ad \'c1\'c1\'c0\'ba html\'c0\'bb\'c2\'a5\'be\'df\'c7\'d8\par
\'bf\'c9\'c6\'bc\'b9\'cc\'c1\'a6\'c0\'cc\'bc\'c7\'c0\'bb \'b3\'b2\'b9\'df\'c7\'cf\'b0\'d4 \'b5\'c7\'b8\'e9 \'be\'c8\'b5\'c5 =>\'c7\'a5\'c1\'d8\'c0\'bb\'c1\'f6\'c4\'d1\'be\'df\par
\'b1\'e2\'c1\'d8!! \'c7\'ec\'b4\'f5(\'c3\'b9\'b9\'f8\'a4\'8a\'b7\'ce \'c1\'df\'bf\'e4\'c7\'d1 \'c7\'ec\'b4\'f5\'b6\'f3\'b0\'ed \'c7\'d8\'bc\'ad h1) <h1> </h1> (!!!!\'b8\'b6\'c5\'a9\'b4\'d9\'bf\'ee\'bf\'a1 \'c0\'df \'c0\'fb\'be\'ee\'b5\'d6!!!!)\par
\par
\'b0\'cb\'bb\'f6\'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2(\'b1\'b8\'b1\'db)->\'b8\'b5\'c5\'a9 \'b8\'b9\'c0\'cc\'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9: a\'c5\'c2\'b1\'d7\par
\'c5\'c2\'b1\'d7\'b0\'a1 \'be\'f8\'b4\'c2 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'b1 \'b3\'d7\'c0\'cc\'b9\'f6\'b0\'b0\'c0\'ba\'b0\'cd\'b5\'b5 \'bc\'f8\'bc\'f6\'c7\'d1 html\par
\par
css(cascading style sheet) \'c6\'e4\'c0\'cc\'c1\'f6 \'bf\'b9\'bb\'da\'b0\'d4 \'b8\'b8\'b5\'e9\'bc\'f6\'c0\'d6\'be\'ee\par
\par
\par
html\par
!\'c7\'cf\'b8\'e9 \'b1\'e2\'ba\'bb\'c5\'c2\'b1\'d7 \'b2\'ae\'b5\'a5\'b1\'e2 \'b8\'b8\'b5\'e9\'be\'ee\'c1\'e0!\par
\par
\par
git init\par
git add .\par
git commit -m "first commit"\par
\par
\par
flask run --host=0.0.0.0 --port=8080\par
\par
------------------------------------------------\par
\par
\par
3\lang1042\'b4\'dc\'b0\'e8 \'b9\'e8\'c6\'f7\par
\par
\par
0. @app.route('/newyear')\par
\tab return render_template('newyear.html')\par
\par
1. datetime \'bf\'c0\'b4\'c3\'c0\'c7 \'b3\'af\'c2\'a5\'b8\'a6 \'be\'cb \'bc\'f6 \'c0\'d6\'b4\'d9.\par
2 \{% if \'bf\'c0\'b4\'c3 == \'bb\'f5\'c7\'d8(1.1) %\}\par
\tab\'bf\'b9\par
   \{%\'be\'c6 \'be\'c6\'b4\'cf\'b8\'e9 %\}\par
\tab\'be\'c6\'b4\'cf\'bf\'c0 \par
\par
\par
\par
\par
root route is the convention in the beginning of the html source that goes to index.html\'be\'e0\'bc\'d3\par
@app.route('/')\par
def index():\par
\tab return render_template('index.html')\par
\lang0\par
\par
<h1> <h2> <body> <ls> <table> <form> <input>\par
\{% if dfadsf %\}\par
\{% else %\}\par
\{% endif \}\par
\par
\par
msg = request.args.get('msg') \lang1042\'c0\'d4\'b7\'c2\'b0\'aa \'b0\'a1\'c1\'ae\'bf\'c8\par
\par
\'bd\'ba\'c6\'ae\'b8\'b5 \'bc\'bc\'b0\'a1\'c1\'f6 - \'c7\'d5\'c3\'bc "" + "" // \'bc\'f6\'bc\'fa \{token\} // \'c0\'da\'b8\'a3\'b4\'c2\'b0\'c5\par
\par
\par
\par
getUpdates\par
\par
result": [\par
    \{\par
      "update_id": 107125338,\par
      "message": \{\par
        "message_id": 1,\cf2\par
        "from": \{\par
          "id": 779667174, //  \'b3\'bb\'be\'c6\'c0\'cc\'b5\'f0\par
          "is_bot": false,\par
          "first_name": "\'bd\'ce\'c7\'c7\'b8\'c7",\par
          "language_code": "ko"\par
        \},\par
\cf0         "chat": \{\par
          "id": 779667174,\par
          "first_name": "\'bd\'ce\'c7\'c7\'b8\'c7",\par
          "type": "private"\par
        \},\par
        "date": 1545273381,\par
        "text": "/start",\par
        "entities": [\par
          \{\par
            "offset": 0,\par
            "length": 6,\par
            "type": "bot_command"\par
          \}\par
        ]\par
      \}\par
    \}\par
\par
\par
\par
\par
\'c6\'e4\'c0\'cc\'c5\'a9\'b5\'a5\'c0\'cc\'c5\'cd \'b8\'b8\'b5\'e9\'be\'ee\'c1\'d6\'b4\'c2 \'c6\'d0\'c5\'b0\'c1\'f6 - faker\par
\par
>>> import faker\par
>>> from paker import Faker\par
>>> from faker import Faker                                                                                                                                                                                                                     \par
>>> app = Flask(__name__)\par
>>> fake.name()\par
\par
how to quit from linumx python3 cmd => quit()\par
\lang0\par
\par
\par
name = request.args.get('name') // argument \lang1042\'bb\'f3\'c0\'da\'bf\'a1\'bc\'ad \'b3\'af\'b6\'f3\'bf\'c2 \'b0\'cd \'bb\'ac\'bc\'f6\'c0\'d6\'b4\'e7.!~!!\par
\par
\par
\par
 babos = \{"john": "teacher", "tak": "developer"\}\par
\'c5\'b0 \'b5\'ce\'b0\'b3 \'b9\'df\'b7\'f9 \'b5\'ce\'b0\'b3 \'c5\'b0:\'b9\'df\'b7\'f9\par
\par
sitback:~/workspace/vonvon $ python3\par
>>> babos = \{"john": "teacher", "tak": "developer"\}\par
>>> "john" in babos\par
True\par
>>> "eric" in babos\par
False\par
\par
\lang0\par

\pard\par

\pard fish[] \lang1042\'b8\'ae\'bd\'ba\'c6\'ae\'c1\'f6\'c1\'a4\par
fish.append(me)\par
fish.append(you)\par
\'b5\'ce\'b0\'a1\'c1\'f6\'b0\'aa\'b5\'b5 \'c7\'d1\'bd\'d6\'c0\'b8\'b7\'ce \'b3\'d6\'c0\'bb\'bc\'f6\'c0\'d6\'b4\'d9\par
fish = [\par
\tab ["\'b0\'ad\'b5\'bf\'c1\'d6", "\'b1\'e8\'c1\'f6\'bc\'f6"],\par
\tab ["\'b0\'ad\'b5\'bf\'c1\'d6", "\'be\'c6\'c0\'cc\'c0\'af"]\par
]\par
\lang0\par
fish[1][1] = ["\lang1042\'b0\'ad\'b5\'bf\'c1\'d6", "\'b1\'e8\'c1\'f6\'bc\'f6"]\par
\par
numpy => \'b5\'a5\'c0\'cc\'c5\'cd\'bd\'d6\'b5\'e9 \'c1\'b6\'c0\'db\'b0\'a1\'b4\'c9\'c7\'d4\par
\par
\par
\lang0 list\lang1042\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'b8\'e9 \'c0\'d3\'bd\'c3\'c0\'fa\'c0\'e5\'c0\'cc\'b6\'f3 \'bc\'ad\'b9\'f6 \'b2\'af\'b4\'d9\'c5\'b0\'b8\'e9 \'b4\'d9\'b3\'af\'b6\'f3\'b0\'a8\par
->\'c6\'c4\'c0\'cf\'be\'b2\'c0\'da\par
\par
\par
\par
\par
\par
\par
\lang0 utf-8\lang1042\'c0\'cc\'b6\'f5? \'c0\'ce\'c4\'da\'b5\'f9 \'c7\'fc\'bd\'c4\par
\par
##open('\'c6\'c4\'c0\'cf\'b8\'ed', '\'b9\'bb\'c7\'d2\'c1\'f6', '[\'c0\'ce\'c4\'da\'b5\'f9]') #requires two inputs 'file name', 'what you're going to do'\par
\par
open('names.txt', 'w', encoding="utf-8")\par
\par
##\'bf\'b5\'b1\'b8\'c0\'fb(\'bc\'d5\'bd\'c7\'be\'f8\'c0\'cc)\'c0\'b8\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fa\'c0\'e5\'c7\'d2\'b6\'a7.\par
\par
##open('\'c6\'c4\'c0\'cf\'b8\'ed', '\'b9\'bb\'c7\'d2\'c1\'f6', '[\'c0\'ce\'c4\'da\'b5\'f9]') #requires two inputs 'file name', 'what you're going to do'\par
\par
f = open('names.txt', 'a', encoding="utf-8")\par
#f.write('\'b1\'e8\'bf\'b5\'c1\'d8')\par
#print(f.read())\par
f.write('\\n\'b1\'e8\'c5\'b9\'c8\'f1')\par
f.close\par
\par
# .txt \'c6\'c4\'c0\'cf \'bf\'ac\'b4\'d9\par
# 1. \'c0\'d0\'b1\'e2 'r' 'read'\par
# 2. \'be\'b2\'b1\'e2 'w' 'write'\par
# 3. \'bc\'f6\'c1\'a4 'a' 'append'\par
# \'c6\'c4\'c0\'cf \'b4\'dd\'b4\'c2\'b4\'d9\par
\par
# .json \'c6\'c4\'c0\'cf \'bf\'ac\'b4\'d9 (import json) // json \'b8\'f0\'b5\'e2 \'c8\'b0\'bf\'eb\'c7\'d8\'bc\'ad \'b0\'a3\'b4\'d9\par
# 1. \'c0\'d0\'b1\'e2 'read'\par
# 2. \'be\'b2\'b1\'e2 'write'\par
# 3. \'bc\'f6\'c1\'a4 'append'\par
# \'c6\'c4\'c0\'cf \'b4\'dd\'b4\'c2\'b4\'d9\par
\par
# .csv \'c6\'c4\'c0\'cf \'bf\'ac\'b4\'d9 (import csv)\par
# 1. \'c0\'d0\'b1\'e2 'read'\par
# 2. \'be\'b2\'b1\'e2 'write'\par
# 3. \'bc\'f6\'c1\'a4 'append'\par
# \'c6\'c4\'c0\'cf \'b4\'dd\'b4\'c2\'b4\'d9\par
\par
# with \'c5\'b0\'bf\'f6\'b5\'e5 \'c8\'b0\'b5\'bf -> \'c4\'da\'b5\'e5\'b8\'a6 \'b0\'a3\'b0\'e1\'c7\'cf\'b0\'d4\par
\par
# DB \'bf\'ad\'b4\'d9(CONNECT) -> CRUD OP.\par
# 1. \'c0\'d0\'b1\'e2(CREATE)\par
# 2. \'be\'b2\'b1\'e2(READ/RETRIEVE)\par
# 3. \'bc\'f6\'c1\'a4(UPDATE)\par
# 4. \'bb\'e8\'c1\'a6(DELETE/DESTROY)\par
#DB \'b4\'dd\'b4\'c2\'b4\'d9(disconnect)\par
\par
\par
\par
\par
# CSV(Comma Seperated Value : \'c4\'de\'b8\'b6\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'c8 \'b0\'aa(\'b5\'e9)) => excel\'bf\'a1\'bc\'ad \'be\'b5 \'bc\'f6 \'c0\'d6\'b4\'d9. csv \'be\'c6\'c1\'d6 \'b0\'a3\'b4\'dc\'c7\'d1 \'bf\'a2\'bc\'bf\'b0\'b0\'c0\'bd\par
# CSV \'b0\'a3\'b4\'dc\'c7\'d1 \'c7\'e0\'b0\'fa \'bf\'ad\'b5\'e9\'c0\'cc \'b8\'b9\'c0\'bb \'b6\'a7 \'be\'b4\'b4\'d9!\par
# \'bf\'a2\'bc\'bf \'c6\'c4\'c0\'cf \'c0\'da\'c3\'bc\'b0\'a1 \'b9\'ab\'b0\'cc\'b1\'e2 \'8b\'9a\'b9\'ae\'bf\'a1 \'c0\'cc\'b0\'c5 \'c6\'ed\'b8\'ae\'c7\'cf\'b0\'d4 \'be\'b8\par
\par
# \'c0\'cc\'c1\'df\'b9\'e8\'bf\'ad\'c3\'b3\'b7\'b3 \'c7\'d2 \'bc\'f6\'b5\'b5 \'c0\'d6\'be\'ee!\par
# list[0][1] \'c0\'cc\'b7\'b1\'b0\'c5\'c3\'b3\'b7\'b3\par
\par
import csv\par
f = open('sspy1.csv', 'w', encoding='utf-8') # \'c1\'b6\'c0\'db\'c7\'cf\'b4\'c2 \'c8\'af\'b0\'e6\'c0\'bb f\'b6\'f3\'b4\'c2 \'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed \'c7\'d1\'b4\'d9\par
\par
\par
\par
-----------------------\par
\par
environment variable \'b7\'ce \'b9\'ce\'b0\'a8\'c7\'d1 \'c1\'a4\'ba\'b8 \'ba\'f1\'b0\'f8\'b0\'b3\lang0\par
}
 